<!DOCTYPE module SYSTEM "module.dtd">

<module name="dronecan" dir="dronecan">
  <doc>
    <description>
      DroneCAN interface for transmitting/receiving dronecan messages on CAN busses
   </description>
   <configure name="DRONECAN_USE_CAN1" value="FALSE" description="Enable DroneCAN on CAN1 interface"/>
   <configure name="DRONECAN_USE_CAN2" value="FALSE" description="Enable DroneCAN on CAN2 interface"/>
   <define name="DRONECAN_NODE_ID" value="42" description="The DroneCAN node ID of the AP"/>
   <define name="DRONECAN_BAUDRATE" value="1000000" description="The baudrate of the CAN interface"/>
   <define name="DRONECAN_BAUDRATE_MULT" value="4" description="The multiplier for the CAN FD data baudrate"/>
   <define name="FDCAN_ENABLE" value="TRUE" description="The CAN interface CAN FD compatibility"/>
   <define name="VENDOR_CODE" value="0xA5A5" description="A code contained in the NodeStatus message"/>
   
  </doc>
  <header>
    <file name="dronecan.h" dir="modules/dronecan"/>
  </header>
  <init fun="dronecan_init()"/>
  <makefile target="ap">
    <!-- Enable the CAN busses if needed -->
    <define name="USE_CAN1" cond="ifeq ($(DRONECAN_USE_CAN1), TRUE)"/>
    <define name="USE_CAN2" cond="ifeq ($(DRONECAN_USE_CAN2), TRUE)"/>
    <define name="DRONECAN_USE_CAN1" value="$(DRONECAN_USE_CAN1)"/>
    <define name="DRONECAN_USE_CAN2" value="$(DRONECAN_USE_CAN2)"/>

    <!-- Load canard -->
    <include name="$(PAPARAZZI_SRC)/sw/ext/libcanard"/>
    <file name="canard.c" dir="$(PAPARAZZI_SRC)/sw/ext/libcanard"/>

    <!-- Load dronecan itself -->
    <file_arch name="dronecan.c" dir="modules/dronecan"/>
  </makefile>
</module>

